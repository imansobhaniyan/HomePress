@model PropertyVewModel

<div class="card mb-5 mb-xl-10">
    <div class="card-header border-0 pt-6">
        <div class="card-title" style="font-size:1rem">
            <div class="d-flex align-items-center position-relative my-1 ms-2 data-table-bar">
                <a href="#" onclick="event.preventDefault(); location.reload();" class="p-2 cursor-pointer me-5" title="Refresh">
                    <i class="fa-regular fa-redo" style="color: #444"></i>
                </a>
                <div class="mx-2">
                    <i class="fa-regular fa-horizontal-rule fa-rotate-90"></i>
                </div>
                <div class="px-4">
                    <a href="/properties" class="@(Model.Status == "mainlist" ? "active" : string.Empty)">
                        Main List @Model.GetPretyCount(Model.MainListCount)
                    </a>
                </div>
                <div class="px-4">
                    <a href="/properties/processing" class="@(Model.Status == "processing" ? "active" : string.Empty)">
                        Processing @Model.GetPretyCount(Model.ProcessingCount)
                    </a>
                </div>
                <div class="px-4">
                    <a href="/properties/draft" class="@(Model.Status == "draft" ? "active" : string.Empty)">
                        Draft @Model.GetPretyCount(Model.DraftCount)
                    </a>
                </div>
                <div class="px-4">
                    <a href="/properties/archived" class="@(Model.Status == "archived" ? "active" : string.Empty)">
                        Archived @Model.GetPretyCount(Model.ArchiveCount)
                    </a>
                </div>
            </div>
        </div>
        <div class="card-toolbar">
            <div class="d-flex justify-content-end align-items-center" data-kt-user-table-toolbar="base">
                <div class="d-flex align-items-center position-relative my-1 mx-2">
                    <span class="svg-icon svg-icon-1 position-absolute ms-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black" />
                            <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black" />
                        </svg>
                    </span>
                    <input type="text" class="form-control form-control-sm w-250px ps-10" placeholder="Search Property" />
                </div>
                <div class="mx-2">
                    <select class="form-select form-select-sm" style="width:120px">
                        <option selected="@(Model.PageSize == 20)" value="20">Rows (20)</option>
                        <option selected="@(Model.PageSize == 50)" value="50">Rows (50)</option>
                        <option selected="@(Model.PageSize == 100)" value="100">Rows (100)</option>
                    </select>
                </div>
                <div class="mx-2">
                    <button class="btn btn-light btn-sm">
                        <i class="fa-regular fa-filter"></i>
                        Filter
                    </button>
                </div>
                <div class="mx-2">
                    <button class="btn btn-light btn-sm">
                        <i class="fa-regular fa-sort-amount-down"></i>
                        Sort
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body pt-0 position-relative">
        <div class="d-flex multi-action-row align-items-center px-2 py-3 selected-items-container hidden">
            <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                <input class="form-check-input select-all-action" type="checkbox" id="data-table-check-all" data-kt-check="true" data-kt-check-target="#data_table_1 .form-check-input" value="1" />
            </div>
            <a href="#" onclick="event.preventDefault(); ShowDeleteModal();" class="mx-3" data-bs-toggle="modal" data-bs-target="#modal-trash-many" title="Delete Selected Rows">
                <i class="fa-regular fa-circle-minus text-danger"></i>
            </a>
            <div class="ms-4 selected-items-count" style="font-size:12px;">5 item(s) selected!</div>
        </div>

        @if (Model.Items.Count == 0)
        {
            <div class="empty-data">
                <div class="text-center">
                    <i class="fa-regular fa-triangle-exclamation"></i>
                </div>
                There is no row to show!
            </div>
        }
        else
        {
            <table class="table table-responsive table-hover table-sm align-middle table-row-dashed" id="data_table_1">
                <thead>
                    <tr class="text-start text-muted fw-bolder fs-7 text-uppercase gs-0">
                        <th class="w-10px pe-2 ps-2">
                            <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                                <input class="form-check-input" type="checkbox" id="data-table-check-all" data-kt-check="true" data-kt-check-target="#data_table_1 .form-check-input" value="1" />
                            </div>
                        </th>
                        <th class="min-w-125px"></th>
                        <th>Status</th>
                        @*<th>Category</th>*@
                        <th>Location</th>
                        <th>Created At</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="ps-2">
                                <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                                    <input class="form-check-input" type="checkbox" value="@item.Id" />
                                </div>
                            </td>
                            <td class="align-items-center">
                                <div class="d-flex">
                                    <div class="symbol symbol-60px symbol-2by3 flex-shrink-0 me-4">
                                        @if (item.Photos != null && item.Photos.Count > 0)
                                        {
                                            <img src="@item.Photos.Select(f => f.Width256).FirstOrDefault()" class="mw-100" alt="@item.Title" />
                                        }
                                        else
                                        {
                                            <img src="/assets/media/stock/600x400/img-3.jpg" class="mw-100" alt="@item.Title" />
                                        }
                                    </div>
                                    <div class="d-flex align-items-center flex-wrap flex-grow-1 mt-n2 mt-lg-n1">
                                        <div class="d-flex flex-column flex-grow-1 my-lg-0 my-2 pe-3">
                                            <a href="#" class="fs-5 text-gray-800 text-hover-primary fw-bolder">@item.Title</a>
                                            <span class="text-gray-400 fw-bold fs-7 my-1">
                                                <span class="me-4">
                                                    <i class="fa-regular fa-tag"></i>
                                                    @item.Category
                                                </span>
                                                <span class="me-4">
                                                    <i class="fa-regular fa-building"></i>
                                                    @item.PropertyType
                                                </span>
                                                <span class="me-4">
                                                    <i class="fa-regular fa-dollar-sign"></i>
                                                    @item.Price.ToString("N2") @item.PricePrefix
                                                </span>
                                            </span>
                                            <span class="text-gray-400 fw-bold fs-7">
                                                By:
                                                <a href="#" class="text-primary fw-bold" onclick="event.preventDefault();">
                                                    @Model.Users.Where(f => f.Id == item.CreatorUserId).Select(f => f.FirstName + " " + f.LastName).FirstOrDefault()
                                                </a>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td class="align-items-center">
                                @if (item.PropertyStatus == HomePress.PropertyStatus.Draft)
                                {
                                    <span class="badge badge-secondary fs-8 fw-bolder">Draft</span>
                                }
                                else if (item.PropertyStatus == HomePress.PropertyStatus.Media)
                                {
                                    <span class="badge badge-primary fs-8 fw-bolder">Media</span>
                                }
                                else if (item.PropertyStatus == HomePress.PropertyStatus.Rejected)
                                {
                                    <span class="badge badge-danger fs-8 fw-bolder">Rejected</span>
                                }
                                else if (item.PropertyStatus == HomePress.PropertyStatus.Review)
                                {
                                    <span class="badge badge-warning fs-8 fw-bolder">Review</span>
                                }
                                else if (item.PropertyStatus == HomePress.PropertyStatus.Published)
                                {
                                    <span class="badge badge-success fs-8 fw-bolder">Published</span>
                                }
                                else if (item.PropertyStatus == HomePress.PropertyStatus.Sold)
                                {
                                    <span class="badge badge-info fs-8 fw-bolder">Sold</span>
                                }
                                else
                                {
                                    <span class="badge badge-secondary fs-8 fw-bolder">Archived</span>
                                }
                            </td>
                            @*<td class="align-items-center">@item.Category</td>*@
                            <td class="align-items-center">
                                <a href="https://www.google.com/maps/place/@item.MapLAT,@item.MapLNG" target="_blank" title="View on google map">
                                    @Model.Countries.Where(f => f.Id == item.CountryId).Select(f => f.Name).FirstOrDefault()/@Model.States.Where(f => f.Id == item.StateId).Select(f => f.Name).FirstOrDefault()/@Model.Cities.Where(f => f.Id == item.CityId).Select(f => f.Name).FirstOrDefault()
                                </a>
                            </td>
                            <td class="align-items-center">@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                            <td class="text-end">
                                <a href="#" class="btn btn-default bnt-icon btn-active-light-primary btn-sm" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                    <i class="fa-regular fa-ellipsis-vertical"></i>
                                </a>
                                <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4" data-kt-menu="true">
                                    <div class="menu-item px-3">
                                        <a href="/properties/edit/@item.Id" class="menu-link px-3">
                                            <i class="fa-regular fa-edit me-2"></i>
                                            Edit
                                        </a>
                                    </div>
                                    <div class="menu-item px-3">
                                        <a href="/properties/media/@item.Id" class="menu-link px-3">
                                            <i class="fa-regular fa-photo-film me-2"></i>
                                            Media
                                        </a>
                                    </div>
                                    <div class="menu-item px-3">
                                        <a href="" class="menu-link px-3 text-danger" onclick="event.preventDefault(); ShowDeleteModal('@item.Id');">
                                            <i class="fa-regular fa-circle-xmark me-2 text-danger"></i>
                                            Delete
                                        </a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    @if (Model.TotalPagesCount > 1)
    {
        <div class="card-footer text-end">
            <div class="row align-items-center">
                <div class="col-sm-3 text-muted text-start">
                    @if (Model.TotalPagesCount > 1)
                    {
                        <span>@Model.From to @Model.To rows of @Model.TotalItemsCount</span>
                    }
                </div>
                <div class="col-sm-6">
                    <ul class="pagination pagination-circle">
                        @if (Model.PageNumber != 1)
                        {
                            <li class="page-item previous disabled"><a href="#" class="page-link"><i class="previous"></i></a></li>
                        }

                        @for (var i = 1; i <= Model.TotalPagesCount; i++)
                        {
                            if (i == Model.PageNumber)
                            {
                                <li class="page-item active">
                                    <a href="#" onclick="event.preventDefault();" class="page-link">
                                        <span>@i</span>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a href="#" onclick="event.preventDefault(); SetPage(@i)" class="page-link">
                                        <span>@i</span>
                                    </a>
                                </li>
                            }
                        }

                        @if (Model.PageNumber != Model.TotalPagesCount)
                        {
                            <li class="page-item next"><a href="#" class="page-link"><i class="next"></i></a></li>
                        }
                    </ul>
                </div>
                <div class="col-sm-3">
                </div>
            </div>
        </div>
    }
</div>
